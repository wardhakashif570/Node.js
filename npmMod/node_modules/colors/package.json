{
  "_args": [
    [
      {
        "raw": "colors@*",
        "scope": null,
        "escapedName": "colors",
        "name": "colors",
        "rawSpec": "*",
        "spec": "*",
        "type": "range"
      },
      "C:\\Users\\wardha\\Desktop\\Node js\\npmMod\\node_modules\\nodeman"
    ]
  ],
  "_from": "colors@*",
  "_hasShrinkwrap": false,
  "_id": "colors@1.4.0",
  "_location": "/colors",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/colors_1.4.0_1569195967207_0.2781122116893864"
  },
  "_npmUser": {
    "name": "dabh",
    "email": "dabh@alumni.stanford.edu"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "colors@*",
    "scope": null,
    "escapedName": "colors",
    "name": "colors",
    "rawSpec": "*",
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/nodeman"
  ],
  "_resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
  "_shasum": "c50491479d4c1bdaed2c9ced32cf7c7dc2360f78",
  "_shrinkwrap": null,
  "_spec": "colors@*",
  "_where": "C:\\Users\\wardha\\Desktop\\Node js\\npmMod\\node_modules\\nodeman",
  "author": {
    "name": "Marak Squires"
  },
  "bugs": {
    "url": "https://github.com/Marak/colors.js/issues"
  },
  "contributors": [
    {
      "name": "DABH",
      "url": "https://github.com/DABH"
    }
  ],
  "dependencies": {},
  "description": "get colors in your node.js console",
  "devDependencies": {
    "eslint": "^5.2.0",
    "eslint-config-google": "^0.11.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
    "shasum": "c50491479d4c1bdaed2c9ced32cf7c7dc2360f78",
    "tarball": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
    "fileCount": 21,
    "unpackedSize": 39506,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdiAfACRA9TVsSAnZWagAA7gMP/1eUoL2YZSoe4XH3p7o5\n2NRhGJuE+81Kwbl/2+HWvlWGXxTo1vLYWGVAfBVYtEuUdnPlMOpCEyqdB8Ng\nqMr9acH/8ZkHKRyNYu9GeDLWWUFx8wv94qpcmnuqgp+24X3gBhiS7hnG6UJh\nL4kKUSycTGp0FFWPQ4tdpBuvC6PDGTowPfHh/oj0RosHygRcW6F4V5HDyws1\nQTnuE3k5vBhhzKQQ4oktGCUuQATqsg89lDDSw5hjThBf2y5ZrpF6qLVoiLgm\noMrEF3vDOIyf63naUmj/3qzBYFfQZU3wlGyaRfNxdqNooKW2QOb/x2XFtP46\nYibCl2xhGA0JsinmaAclbLfDkZSZs1bsjpj2xUOFJjQOeMReeS2PzCgHRBJy\nT9ow3X6MbRblOcWuX8Bbhr8kg9Av1xx2A9mtJ7G/DVuHLHBQOTro2l/qIb5M\nf9Z/++j4P1lMMKBp5jHvCRUNq9jgWdSaT9NHo1RvNKuEZM9mxyzyygcidj5w\ngaCGQ5G5kFOKAgmN1LvRYai5P31waqJ+Wr96g6XRfA9SBeeeX12v481jpKQm\nVZ6khQeII1VUgbadjWWegRAobEkW5JXLjdZbISZeIBahs5bOWPFiAFXowf4O\n7Hygdj0xtzkH/sWJeKUCxnzX6VN/mtu+QkPfjGBgDHNL4gtZsGDAizcsFuly\nDWUs\r\n=9VVk\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.1.90"
  },
  "files": [
    "examples",
    "lib",
    "LICENSE",
    "safe.js",
    "themes",
    "index.d.ts",
    "safe.d.ts"
  ],
  "gitHead": "baa0e1c7dc50d868354206b9ea71273e3f05f593",
  "homepage": "https://github.com/Marak/colors.js",
  "keywords": [
    "ansi",
    "terminal",
    "colors"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dabh",
      "email": "dabh@stanford.edu"
    },
    {
      "name": "marak",
      "email": "marak.squires@gmail.com"
    }
  ],
  "name": "colors",
  "optionalDependencies": {},
  "readme": "# colors.js\n[![Build Status](https://travis-ci.org/Marak/colors.js.svg?branch=master)](https://travis-ci.org/Marak/colors.js)\n[![version](https://img.shields.io/npm/v/colors.svg)](https://www.npmjs.org/package/colors)\n[![dependencies](https://david-dm.org/Marak/colors.js.svg)](https://david-dm.org/Marak/colors.js)\n[![devDependencies](https://david-dm.org/Marak/colors.js/dev-status.svg)](https://david-dm.org/Marak/colors.js#info=devDependencies)\n\nPlease check out the [roadmap](ROADMAP.md) for upcoming features and releases.  Please open Issues to provide feedback, and check the `develop` branch for the latest bleeding-edge updates.\n\n## get color and style in your node.js console\n\n![Demo](https://raw.githubusercontent.com/Marak/colors.js/master/screenshots/colors.png)\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### bright text colors\n\n  - brightRed\n  - brightGreen\n  - brightYellow\n  - brightBlue\n  - brightMagenta\n  - brightCyan\n  - brightWhite\n\n### background colors\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n  - bgGray\n  - bgGrey\n\n### bright background colors\n\n  - bgBrightRed\n  - bgBrightGreen\n  - bgBrightYellow\n  - bgBrightBlue\n  - bgBrightMagenta\n  - bgBrightCyan\n  - bgBrightWhite\n\n### styles\n\n  - reset\n  - bold\n  - dim\n  - italic\n  - underline\n  - inverse\n  - hidden\n  - strikethrough\n\n### extras\n\n  - rainbow\n  - zebra\n  - america\n  - trap\n  - random\n\n\n## Usage\n\nBy popular demand, `colors` now ships with two types of usages!\n\nThe super nifty way\n\n```js\nvar colors = require('colors');\n\nconsole.log('hello'.green); // outputs green text\nconsole.log('i like cake and pies'.underline.red) // outputs red underlined text\nconsole.log('inverse the color'.inverse); // inverses the color\nconsole.log('OMG Rainbows!'.rainbow); // rainbow\nconsole.log('Run the trap'.trap); // Drops the bass\n\n```\n\nor a slightly less nifty way which doesn't extend `String.prototype`\n\n```js\nvar colors = require('colors/safe');\n\nconsole.log(colors.green('hello')); // outputs green text\nconsole.log(colors.red.underline('i like cake and pies')) // outputs red underlined text\nconsole.log(colors.inverse('inverse the color')); // inverses the color\nconsole.log(colors.rainbow('OMG Rainbows!')); // rainbow\nconsole.log(colors.trap('Run the trap')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don't want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Enabling/Disabling Colors\n\nThe package will auto-detect whether your terminal can use colors and enable/disable accordingly. When colors are disabled, the color functions do nothing. You can override this with a command-line flag:\n\n```bash\nnode myapp.js --no-color\nnode myapp.js --color=false\n\nnode myapp.js --color\nnode myapp.js --color=true\nnode myapp.js --color=always\n\nFORCE_COLOR=1 node myapp.js\n```\n\nOr in code:\n\n```javascript\nvar colors = require('colors');\ncolors.enable();\ncolors.disable();\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = 'Marak';\nconsole.log(colors.green('Hello %s'), name);\n// outputs -> 'Hello Marak'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = require('colors');\n\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(\"this is an error\".error);\n\n// outputs yellow text\nconsole.log(\"this is a warning\".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require('colors/safe');\n\n// set single property\nvar error = colors.red;\nerror('this is red');\n\n// set theme\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n\n```\n\n### Combining Colors\n\n```javascript\nvar colors = require('colors');\n\ncolors.setTheme({\n  custom: ['red', 'underline']\n});\n\nconsole.log('test'.custom);\n```\n\n*Protip: There is a secret undocumented style in `colors`. If you find the style you can summon him.*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Marak/colors.js.git"
  },
  "scripts": {
    "lint": "eslint . --fix",
    "test": "node tests/basic-test.js && node tests/safe-test.js"
  },
  "version": "1.4.0"
}
